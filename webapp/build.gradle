apply plugin: "war"
apply from: "https://raw.github.com/akhikhl/gretty/master/pluginScripts/gretty.plugin"
apply plugin: "webapp"

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
    }
}

configurations {
    onlyRunTime
}

dependencies {
    compile (project(":dbmodel")) {transitive = false}
    compile group: "org.intermine", name: "bio-core", version: imVersion
    compile group: "org.intermine", name: "intermine-api", version: imVersion
    compile group: "org.intermine", name: "intermine-webapp", version: imVersion, classifier: "classes"
    compile group: "org.intermine", name: "intermine-webtasks", version: imVersion
    onlyRunTime group: 'org.intermine', name: 'bluegenes', version: '0.9.3-SNAPSHOT'
}

def explodedWebAppDir = "$buildDir/explodedWebApp"
def mergePropsDir = "$buildDir/props"

webappConfig {
    mineName = "flymine"
    objectStoreName = "os.production"
    userProfileObjectStoreName = "os.userprofile-production"
    userProfileObjectStoreWriterName = "osw.userprofile-production"
    defaultInterminePropertiesFile = "default.intermine.production.properties"
    propsDir = "$mergePropsDir"
}

war {
    dependsOn 'mergeProperties', 'summariseObjectStore', 'unwarBioWebApp', 'addStrutsConfig'
    finalizedBy 'warWebApp'
}

task warWebApp(type: War) {
    dependsOn 'copyWebappContent'
    description "Create the war from the build/explodedWebAppDir directory"
    from "${explodedWebAppDir}"
    exclude "WEB-INF/web.properties"
    webInf { from "${mergePropsDir}" }
}

task copyWebappContent(type: Copy) {
    from "src/main/webapp/"
    into "${explodedWebAppDir}"
}

// read in biotestmine.properties to get the contextPath
def props = new Properties()
file(minePropertyFile).withInputStream { props.load(it) }

gretty {
    jvmArgs = ['-Dorg.apache.el.parser.SKIP_IDENTIFIER_CHECK=true']
    contextPath = props.getProperty("webapp.path")
}

task blueGenesStart(type: JavaExec) {
    classpath = configurations.onlyRunTime
    main = "bluegenes.core"
    //:bluegenes-default-service-root "http://beta.flymine.org/beta"
    environment("bluegenes-default-service-root", props.getProperty("webapp.baseurl") + "/" + props.getProperty("webapp.path"))
    // FlyMine Beta
    environment("bluegenes-default-mine-name", props.getProperty("project.title"))
}
